#!/usr/bin/env python

import subprocess
import argparse
from IPy import IP
from collections import namedtuple
import Domain
import nmap, scanweb
import changemac
import nikto, ssl

# Clearing Shell
subprocess.call('clear', shell=True)

# Colors
R = '\033[31m'  # red
G = '\033[32m'  # green
C = '\033[36m'  # cyan
W = '\033[0m'  # white
Y = '\033[33m'  # yellow

# Treating '/' as character, formatting the art.
sign = r'''
 ______   ______   ______   ______   __   __
/\  == \ /\  ___\ /\  ___\ /\  __ \ /\ "-.\ \
\ \  __< \ \  __\ \ \ \____\ \ \/\ \\ \ \-.  \
 \ \_\ \_\\ \_____\\ \_____\\ \_____\\ \_\\"\_\
  \/_/ /_/ \/_____/ \/_____/ \/_____/ \/_/ \/_/'''

print(f'{Y}{sign}{W}\n')


# Checking host input

def checkhost(inp):
    try:
        IP(inp)
        return 1
    except ValueError:
        return 0


# Using argparse library to display the functions the tool offers

parser = argparse.ArgumentParser(description='Recon Tool')
parser.add_argument('--nmap', help="Perform nmap port scan", action="store_true")
parser.add_argument('--ssl', help="SSL scan using Sslyze", action="store_true")
parser.add_argument('--nikto', help="Complete nikto scan", action="store_true")
parser.add_argument('--changemac', help="Change your LAN's MAC address", action="store_true")
parser.add_argument('--ssh', help="Perform ssh audit", action="store_true")
parser.add_argument('--subdomain', help="Know target's subdomains if available", action="store_true")
parser.add_argument('--scanweb', help="Perform a full OWASP scan against target", action="store_true")
parser.add_argument('--technologies', help="Know your target's technologies used", action="store_true")
parser.add_argument('--findexploit', help="Find related exploits using searchsploit", action="store_true")
parser.add_argument('--all', help="Display all", action="store_true")
args = parser.parse_args()

if args.all:
    args.nmap = True
    args.nikto = True
    args.ssl = True
    args.technologies = True


# Checking if the tool used exits in the system
def checktool(tool):
    process = subprocess.run(['which', tool], capture_output=True, text=True)
    if process.returncode == 0:
        return 0
    else:
        return 1

# Function to clone git repositories

def git_clone(url):
    process = subprocess.Popen(['git', 'clone', url], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    return namedtuple('Std', 'out, err')(process.stdout.read(), process.stderr.read())


def findexploit():
    Keyword = input("Enter the name of technologies (eg.: wordpress):  ")
    print("_______________________________________________________________________________")
    print("Searching exploits using SearchSploit")
    print("_______________________________________________________________________________")
    process = subprocess.run(['searchsploit', Keyword], capture_output=True, text=True)
    print(process.stdout)


if args.nmap:
    nmap.start()

if args.nikto:
    nikto.nikto()

if args.changemac:
    changemac.start()

if args.ssl:
    ssl.start()

if args.ssh:
    ssh()

if args.scanweb:
    a = input(
        "Which option would you like to go for among these \n 1. Uniscan 2. Base Scan(get whois records, etc.) 3.Golismero **Type 1 /2/3 **:  ")
    scanweb.start(a)

if args.technologies:
    Domain.technologies()

if args.subdomain:
    Domain.subdomain()

if args.findexploit:
    findexploit()

# ----------------------------------------------------End--------------------------------------------------------------------------------------------------------
